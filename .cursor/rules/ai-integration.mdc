---
description: 
globs: 
alwaysApply: false
---
# AI Integration Guide

## AI SDK Integration
The project uses AI SDK with multiple provider support for intelligent code rewriting in [src/rewrite.ts](mdc:src/rewrite.ts).

## Supported Providers
- **Anthropic Claude**
- **OpenAI GPT**

## Environment Configuration
The system automatically detects available API keys and selects the best provider:

### Priority Order
1. **ANTHROPIC_API_KEY** - Uses Claude 3.5 Sonnet (preferred for code rewriting)
2. **OPENAI_API_KEY** - Uses GPT-4 Turbo (fallback option)

### API Packages
- **Core**: `ai` (AI SDK core)
- **Providers**: `@ai-sdk/anthropic`, `@ai-sdk/openai`

## Rewrite Functionality
The `rewrite` command processes compressed/minified JavaScript:
1. Reads minified/compressed code files
2. Sends code to Claude API with specific prompts
3. Receives readable, well-formatted code
4. Saves rewritten code to output files

## AI Prompt Strategy
- Focus on making compressed code readable
- Preserve original functionality
- Add meaningful variable names
- Improve code structure and comments
- Handle various JavaScript compression techniques

## Usage Pattern
```bash
urcrx rewrite --path /path/to/compressed-code.js
```

## Future AI Enhancements (TODOs)
- Token usage tracking and limitations
- Integration with multiple LLM providers
- Automatic codebase documentation generation
- Conversational interface for recovered code

## Best Practices
- Always backup original files before rewriting
- Review AI-generated code for accuracy
- Test rewritten code functionality
- Monitor API usage and costs
